<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Grid</title>
    <link href="../frameui/css/frameui.min.css" rel="Stylesheet" />
    <link href="../fontawesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="../css/prettify.css" rel="stylesheet" />
    <link href="../css/api.table.css" rel="stylesheet" />
    <script language="javascript" type="text/javascript" src="../scripts/jquery.js"></script>
    <script language="javascript" type="text/javascript" src="../scripts/prettify.js"></script>
    <script language="javascript" type="text/javascript" src="../frameui/frameui.min.js"></script>
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $("#tabForGrid").Tabs({ Plain: true });

            $("#dg1").Grid({ CanShowPager: true, CanShowCheckBox: true, CanShowRowNumber: true,
                FrozenColumns: [
                { Title: "ID", Field: "ID", Width: 50 },
                { Title: "名称", Field: "Name", Width: 50 }
                ],
                Columns: [
                { Title: "字段1", Field: "Field1", Width: 60 },
                { Title: "字段2", Field: "Field2", Width: 70 },
                { Title: "字段3", Field: "Field3", Width: 80 },
                { Title: "字段4", Field: "Field4", Width: 90 },
                { Title: "字段5", Field: "Field5", Width: 90 },
                { Title: "字段6", Field: "Field6", Width: 90 },
                { Title: "字段7", Field: "Field7", Width: 90 },
                { Title: "字段8", Field: "Field8", Width: 90 },
                { Title: "字段9", Field: "Field9", Width: 90 },
                { Title: "字段10", Field: "Field10", Width: 90 },
                { Title: "字段11", Field: "Field11", Width: 90 },
                { Title: "字段12", Field: "Field12", Width: 90 },
                { Title: "字段13", Field: "Field13", Width: 90 },
                { Title: "字段14", Field: "Field14", Width: 90 }
                ],
                DataSource: { Total: 8, Rows: [
                { ID: "11", Name: "Name1", Field1: "FieldA11", Field2: "FieldB11", Field3: "FieldC11", Field4: "FieldD11", Field5: "FieldE12", Field6: "FieldF11", Field7: "FieldG11", Field8: "FieldH11", Field9: "FieldI11", Field10: "FieldJ11", Field11: "FieldK11", Field12: "FieldL11", Field13: "FieldM11", Field14: "FieldN11" },
                { ID: "12", Name: "Name2", Field1: "FieldA21", Field2: "FieldB21", Field3: "FieldC21", Field4: "FieldD21", Field5: "FieldE21", Field6: "FieldF21", Field7: "FieldG21", Field8: "FieldH21", Field9: "FieldI21", Field10: "FieldJ21", Field11: "FieldK21", Field12: "FieldL21", Field13: "FieldM21", Field14: "FieldN21" },
                { ID: "13", Name: "Name3", Field1: "FieldA31", Field2: "FieldB31", Field3: "FieldC31", Field4: "FieldD31", Field5: "FieldE31", Field6: "FieldF31", Field7: "FieldG31", Field8: "FieldH31", Field9: "FieldI31", Field10: "FieldJ31", Field11: "FieldK31", Field12: "FieldL31", Field13: "FieldM31", Field14: "FieldN31" },
                { ID: "14", Name: "Name4", Field1: "FieldA41", Field2: "FieldB41", Field3: "FieldC41", Field4: "FieldD41", Field5: "FieldE41", Field6: "FieldF41", Field7: "FieldG41", Field8: "FieldH41", Field9: "FieldI41", Field10: "FieldJ41", Field11: "FieldK41", Field12: "FieldL41", Field13: "FieldM41", Field14: "FieldN41" },
                { ID: "15", Name: "Name5", Field1: "FieldA51", Field2: "FieldB51", Field3: "FieldC51", Field4: "FieldD51", Field5: "FieldE51", Field6: "FieldF51", Field7: "FieldG51", Field8: "FieldH51", Field9: "FieldI51", Field10: "FieldJ51", Field11: "FieldK51", Field12: "FieldL51", Field13: "FieldM51", Field14: "FieldN51" },
                { ID: "16", Name: "Name6", Field1: "FieldA61", Field2: "FieldB61", Field3: "FieldC61", Field4: "FieldD61", Field5: "FieldE61", Field6: "FieldF61", Field7: "FieldG61", Field8: "FieldH61", Field9: "FieldI61", Field10: "FieldJ61", Field11: "FieldK61", Field12: "FieldL61", Field13: "FieldM61", Field14: "FieldN61" },
                { ID: "17", Name: "Name7", Field1: "FieldA71", Field2: "FieldB71", Field3: "FieldC71", Field4: "FieldD71", Field5: "FieldE71", Field6: "FieldF71", Field7: "FieldG71", Field8: "FieldH71", Field9: "FieldI71", Field10: "FieldJ71", Field11: "FieldK71", Field12: "FieldL71", Field13: "FieldM71", Field14: "FieldN71" },
                { ID: "18", Name: "Name8", Field1: "FieldA81", Field2: "FieldB81", Field3: "FieldC81", Field4: "FieldD81", Field5: "FieldE81", Field6: "FieldF81", Field7: "FieldG81", Field8: "FieldH81", Field9: "FieldI81", Field10: "FieldJ81", Field11: "FieldK81", Field12: "FieldL81", Field13: "FieldM81", Field14: "FieldN81" }
                ]
                }
            });

            $("#dg2").Grid({ CanShowPager: true, CanShowCheckBox: true, CanShowRowNumber: true, CanMultiple: true, CanShowLoading: true,
                Url: "../datas/grid.json",Method:"GET",
                FrozenColumns: [
                { Title: "ID", Field: "ID", Width: 50 },
                { Title: "名称", Field: "Name", Width: 50 }
                ],
                Columns: [
                { Title: "字段1", Field: "Field1", Width: 60 },
                { Title: "字段2", Field: "Field2", Width: 70 },
                { Title: "字段3", Field: "Field3", Width: 80 },
                { Title: "字段4", Field: "Field4", Width: 90 },
                { Title: "字段5", Field: "Field5", Width: 90 },
                { Title: "字段6", Field: "Field6", Width: 90 },
                { Title: "字段7", Field: "Field7", Width: 90 },
                { Title: "字段8", Field: "Field8", Width: 90 },
                { Title: "字段9", Field: "Field9", Width: 90 },
                { Title: "字段10", Field: "Field10", Width: 90 },
                { Title: "字段11", Field: "Field11", Width: 90 },
                { Title: "字段12", Field: "Field12", Width: 90 },
                { Title: "字段13", Field: "Field13", Width: 90 },
                { Title: "字段14", Field: "Field14", Width: 90 }
                ],
                PageButtons: [
                { Icon: "icon-trash", Title: "Trash", Color: "blue",
                    Click: function (title) {
                        $("#dg2").Frame().Clear();
                    }
                },
                { Separator: true },
                { Icon: "icon-pencil", Title: "Pencil", Color: "purple",
                    Click: function (title) {
                        $("#dg2").Frame().Load("../datas/grid.json");
                    }
                }
                ]
            });

            prettyPrint();
        });
    </script>
</head>
<body>
    <div class="page-content">
        <div class="page-header">
            <h1>Grid</h1>
        </div>
        <div class="row">            
            <div id="tabForGrid">
                <div title="开发者文档">
                    <div class="space"></div>
                    <p class="bigger-110">Grid 用于将指定标准的数据以表格的形式进行显示。通过在 <span class="red smaller-75">div</span> 标签添加 <span class="red smaller-75">.frame-grid</span> 标识为 Frame 数据表格控件。<br />
                    通过使用 <span class="red smaller-75">var grid = $("#页面标签id").Grid(options);</span> 这样一行代码，即可将目标元素通过 <span class="red smaller-75">options</span> 相关属性的配置生成相应的数据表格。<br />
                    </p>
                    <div class="space"></div>
                    <i class="icon-bookmark dark"></i> Options 属性对象详细说明见下表：
                    <table class="table table-bordered table-striped">
                        <thead>
		                    <tr>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    属性名
			                    </th>
			                    <th class="width-65">
				                    <i class="icon-caret-right blue"></i>
				                    具体描述
			                    </th>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    类型
			                    </th>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    默认值
			                    </th>
		                    </tr>
	                    </thead>
                        <tbody>
                            <tr>
                                <td class="center">CanShowPager</td>
                                <td>设置一个值，该值标识数据表格是否使用分页。</td>
                                <td>Boolean</td>
                                <td>true</td>
                            </tr>
                            <tr>
                                <td class="center">CanShowCheckBox</td>
                                <td>设置一个值，该值标识数据表格列头是否使用复选框。</td>
                                <td>Boolean</td>
                                <td>false</td>
                            </tr>
                            <tr>
                                <td class="center">CanShowRowNumber</td>
                                <td>设置一个值，该值标识数据表格是否显示行数。</td>
                                <td>Boolean</td>
                                <td>false</td>
                            </tr>
                            <tr>
                                <td class="center">CanShowLoading</td>
                                <td>设置一个值，该值标识数据表格加载数据时是否出现进度遮罩层。</td>
                                <td>Boolean</td>
                                <td>false</td>
                            </tr>
                            <tr>
                                <td class="center">Width</td>
                                <td>数据表格的宽度。</td>
                                <td>Number</td>
                                <td>auto</td>
                            </tr>
                            <tr>
                                <td class="center">Height</td>
                                <td>数据表格的高度。</td>
                                <td>Number</td>
                                <td>auto</td>
                            </tr>
                            <tr>
                                <td class="center">Message</td>
                                <td>当使用显示加载进度遮罩层时，进度显示文本。</td>
                                <td>String</td>
                                <td>正在加载数据，请稍候...</td>
                            </tr>
                            <tr>
                                <td class="center">Page</td>
                                <td>当前页码。</td>
                                <td>Number</td>
                                <td>1</td>
                            </tr>
                            <tr>
                                <td class="center">PageSize</td>
                                <td>每页显示的记录数。</td>
                                <td>Number</td>
                                <td>10</td>
                            </tr>
                            <tr>
                                <td class="center">FrozenColumns</td>
                                <td>数据表格的冻结列集合。</td>
                                <td>Array</td>
                                <td>null</td>
                            </tr>
                            <tr>
                                <td class="center">Columns</td>
                                <td>数据表格的常规列集合。</td>
                                <td>Array</td>
                                <td>null</td>
                            </tr>
                            <tr>
                                <td class="center">DataSource</td>
                                <td>数据表格加载的数据源对象。对象格式：{ Total，Rows}</td>
                                <td>object</td>
                                <td>null</td>
                            </tr>
                            <tr>
                                <td class="center">Method</td>
                                <td>AJAX 请求方式 ("POST" 或 "GET")。</td>
                                <td>String</td>
                                <td>POST</td>
                            </tr>
                            <tr>
                                <td class="center">DataType</td>
                                <td>服务器返回的数据类型。可用值：xml，html，json，text。</td>
                                <td>String</td>
                                <td>json</td>
                            </tr>
                            <tr>
                                <td class="center">Params</td>
                                <td>发送到服务器的数据参数对象。将自动转换为请求字符串格式。GET 请求中将附加在 URL 后。</td>
                                <td>Object</td>
                                <td>null</td>
                            </tr>
                            <tr>
                                <td class="center">Url</td>
                                <td>发送请求的 URL 地址。</td>
                                <td>String</td>
                                <td>false</td>
                            </tr>
                            <tr>
                                <td class="center">Striped</td>
                                <td>是否交替显示行背景。</td>
                                <td>Boolean</td>
                                <td>true</td>
                            </tr>
                            <tr>
                                <td class="center">CanMultiple</td>
                                <td>设置一个值，该值标识数据表格是否支持多选。</td>
                                <td>Boolean</td>
                                <td>false</td>
                            </tr>
                            <tr>
                                <td class="center">PageButtons</td>
                                <td>设置分页控件的自定义功能按钮组。</td>
                                <td>Array</td>
                                <td>null</td>
                            </tr>
                        </tbody>
                    </table>
                    <i class="icon-bookmark dark"></i> 数据表格的 FrozenColumns 和 Columns 数据列对象的属性详细说明见下表：
                    <table class="table table-bordered table-striped">
                        <thead>
		                    <tr>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    属性名
			                    </th>
			                    <th class="width-75">
				                    <i class="icon-caret-right blue"></i>
				                    具体描述
			                    </th>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    类型
			                    </th>
		                    </tr>
	                    </thead>
                        <tbody>
                            <tr>
                                <td class="center">Title</td>
                                <td>列标题。</td>
                                <td>String</td>
                            </tr>
                            <tr>
                                <td class="center">Field</td>
                                <td>列字段。</td>
                                <td>String</td>
                            </tr>
                            <tr>
                                <td class="center">Width</td>
                                <td>列宽度。</td>
                                <td>Number</td>
                            </tr>
                            <tr>
                                <td class="center">Align</td>
                                <td>列内容的对齐方式。可选值："left"，"right"，"center"</td>
                                <td>String</td>
                            </tr>
                            <tr>
                                <td class="center">Hidden</td>
                                <td>设置一个值，该值标识是否隐藏值。</td>
                                <td>Boolean</td>
                            </tr>
                            <tr>
                                <td class="center">Formatter</td>
                                <td>单元格样式函数，返回样式字符串装饰表格如"background:red"。函数接收3个参数：行索引，行数据，字段值。</td>
                                <td>Function</td>
                            </tr>
                            <tr>
                                <td class="center">Styler</td>
                                <td>格式化单元格函数。函数接收3个参数：行索引，行数据，字段值。</td>
                                <td>Function</td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="space"></div> 
                    <i class="icon-bookmark dark"></i> Options 事件属性对象详细说明见下表：
                    <table class="table table-bordered table-striped">
                        <thead>
		                    <tr>
			                    <th class="width-8">
				                    <i class="icon-caret-right blue"></i>
				                    名称
			                    </th>
			                    <th class="width-20">
				                    <i class="icon-caret-right blue"></i>
				                    参数
			                    </th>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    具体描述
			                    </th>
		                    </tr>
	                    </thead>
                        <tbody>
                            <tr>
                                <td class="center">OnSuccess</td>
                                <td>data</td>
                                <td>请求成功后的回调触发。接收由服务器返回且 DataType 参数进行处理后的数据。</td>
                            </tr>
                            <tr>
                                <td class="center">OnSelectRow</td>
                                <td>index</td>
                                <td>当选择一行时触发。接收参数：行索引，索引起始值为0。</td>
                            </tr>
                            <tr>
                                <td class="center">OnUnSelectRow</td>
                                <td>index</td>
                                <td>当取消选择行时触发。接收参数：行索引，索引起始值为0。</td>
                            </tr>
                            <tr>
                                <td class="center">OnBeforeCheckRow</td>
                                <td>index</td>
                                <td>当复选框勾选之前触发,可以通过 return false 阻止操作。接收参数：行索引，索引起始值为0。</td>
                            </tr>
                            <tr>
                                <td class="center">OnCheckRow</td>
                                <td>index, row</td>
                                <td>复选框勾选上之后触发。接收参数：行索引，数据行对象。</td>
                            </tr>
                            <tr>
                                <td class="center">OnBeforeShowData</td>
                                <td>datas</td>
                                <td>加载显示数据之前触发。</td>
                            </tr>
                            <tr>
                                <td class="center">OnAfterShowData</td>
                                <td>none</td>
                                <td>加载显示数据之后触发。</td>
                            </tr>
                            <tr>
                                <td class="center">OnError</td>
                                <td>xhr，info，thrown</td>
                                <td>对远程服务器请求失败后触发。xhr：XMLHttpRequest对象；info：错误信息；thrown：捕获的异常对象。如果发生了错误，错误信息（info）除了得到 null 之外，还可能是 "timeout"，"error"，"notmodified"和"parsererror"。</td>
                            </tr>
                            <tr>
                                <td class="center">OnLoading</td>
                                <td>none</td>
                                <td>远程请求服务器加载数据前调用触发。</td>
                            </tr>
                            <tr>
                                <td class="center">OnLoaded</td>
                                <td>xhr，ts</td>
                                <td>远程请求服务器加载数据后调用触发。xhr：XMLHttpRequest对象；ts：一个描述请求类型的字符串。</td>
                            </tr>
                            <tr>
                                <td class="center">OnComplete</td>
                                <td>xhr，ts</td>
                                <td>远程请求服务器加载数据完成后回调函数。请求成功或失败之后均调用。</td>
                            </tr>
                            <tr>
                                <td class="center">OnExtractor</td>
                                <td>datas</td>
                                <td>对远程请求服务器成功获取数据后，对数据进一步作处理为{Total，Rows}对象标准格式时调用触发。</td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="space"></div> 
                    <i class="icon-bookmark dark"></i> Grid 对象方法说明见下表：<br />
                    调用：<span class="red smaller-75">$("id").Frame().方法名();</span>
                    <table class="table table-bordered table-striped">
                        <thead>
		                    <tr>
			                    <th class="width-8">
				                    <i class="icon-caret-right blue"></i>
				                    方法
			                    </th>
			                    <th class="width-20">
				                    <i class="icon-caret-right blue"></i>
				                    参数
			                    </th>
			                    <th>
				                    <i class="icon-caret-right blue"></i>
				                    具体描述
			                    </th>
		                    </tr>
	                    </thead>
                        <tbody>
                            <tr>
                                <td class="center">Resize</td>
                                <td>none</td>
                                <td>重置数据表格的宽高，自动适应布局。</td>
                            </tr>
                            <tr>
                                <td class="center">LoadData</td>
                                <td>datas</td>
                                <td>载入本地数据，旧记录将被移除。数据格式必须符合标准对象格式：｛Total，Rows｝。</td>
                            </tr>
                            <tr>
                                <td class="center">Clear</td>
                                <td>none</td>
                                <td>清空当前表格数据。</td>
                            </tr>
                            <tr>
                                <td class="center">Load</td>
                                <td>（url）、（url，{"":""}）</td>
                                <td>从服务器远程请求数据加载。请求参数，两种参数格式：1.Url，2.Url、{"":""}。</td>
                            </tr>
                            <tr>
                                <td class="center">SelectRow</td>
                                <td>index</td>
                                <td>选中指定行。index为行索引，索引值从0起始。</td>
                            </tr>
                            <tr>
                                <td class="center">UnSelectRow</td>
                                <td>index</td>
                                <td>取消选中指定行。</td>
                            </tr>
                            <tr>
                                <td class="center">GetSelections</td>
                                <td>none</td>
                                <td>返回所有被选择的行，当没有记录被选择时，将返回 false。</td>
                            </tr>
                            <tr>
                                <td class="center">SelectAll</td>
                                <td>none</td>
                                <td>全选。</td>
                            </tr>
                            <tr>
                                <td class="center">UnSelectAll</td>
                                <td>none</td>
                                <td>取消全选。</td>
                            </tr>
                            <tr>
                                <td class="center">GetSelected</td>
                                <td>none</td>
                                <td>获取当前选中记录的第一行数据行，当没有记录被选择时，将返回 false。</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div title="代码">
                    <h4 class="red">html代码：</h4>
                    <pre class="frameui-pre prettyprint linenums">
&lt;div class="space"&gt;&lt;/div&gt;
&lt;div style="height:300px;"&gt;
    &lt;div id="dg1"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="space"&gt;&lt;/div&gt;
&lt;div style="height:300px;"&gt;
    &lt;div id="dg2"&gt;&lt;/div&gt;
&lt;/div&gt;</pre>
                    <h4 class="red">javascript代码：</h4>
                    <pre class="frameui-pre prettyprint linenums">
$("#dg1").Grid({ CanShowPager: true, CanShowCheckBox: true, CanShowRowNumber: true,
    FrozenColumns: [
    { Title: "ID", Field: "ID", Width: 50 },
    { Title: "名称", Field: "Name", Width: 50 }
    ],
    Columns: [
    { Title: "字段1", Field: "Field1", Width: 60 },
    { Title: "字段2", Field: "Field2", Width: 70 },
    { Title: "字段3", Field: "Field3", Width: 80 },
    { Title: "字段4", Field: "Field4", Width: 90 },
    { Title: "字段5", Field: "Field5", Width: 90 },
    { Title: "字段6", Field: "Field6", Width: 90 },
    { Title: "字段7", Field: "Field7", Width: 90 },
    { Title: "字段8", Field: "Field8", Width: 90 },
    { Title: "字段9", Field: "Field9", Width: 90 },
    { Title: "字段10", Field: "Field10", Width: 90 },
    { Title: "字段11", Field: "Field11", Width: 90 },
    { Title: "字段12", Field: "Field12", Width: 90 },
    { Title: "字段13", Field: "Field13", Width: 90 },
    { Title: "字段14", Field: "Field14", Width: 90 }
    ],
    DataSource: { Total: 8, Rows: [
    { ID: "11", Name: "Name1", Field1: "FieldA11", Field2: "FieldB11", Field3: "FieldC11", Field4: "FieldD11", Field5: "FieldE12", Field6: "FieldF11", Field7: "FieldG11", Field8: "FieldH11", Field9: "FieldI11", Field10: "FieldJ11", Field11: "FieldK11", Field12: "FieldL11", Field13: "FieldM11", Field14: "FieldN11" },
    { ID: "12", Name: "Name2", Field1: "FieldA21", Field2: "FieldB21", Field3: "FieldC21", Field4: "FieldD21", Field5: "FieldE21", Field6: "FieldF21", Field7: "FieldG21", Field8: "FieldH21", Field9: "FieldI21", Field10: "FieldJ21", Field11: "FieldK21", Field12: "FieldL21", Field13: "FieldM21", Field14: "FieldN21" },
    { ID: "13", Name: "Name3", Field1: "FieldA31", Field2: "FieldB31", Field3: "FieldC31", Field4: "FieldD31", Field5: "FieldE31", Field6: "FieldF31", Field7: "FieldG31", Field8: "FieldH31", Field9: "FieldI31", Field10: "FieldJ31", Field11: "FieldK31", Field12: "FieldL31", Field13: "FieldM31", Field14: "FieldN31" },
    { ID: "14", Name: "Name4", Field1: "FieldA41", Field2: "FieldB41", Field3: "FieldC41", Field4: "FieldD41", Field5: "FieldE41", Field6: "FieldF41", Field7: "FieldG41", Field8: "FieldH41", Field9: "FieldI41", Field10: "FieldJ41", Field11: "FieldK41", Field12: "FieldL41", Field13: "FieldM41", Field14: "FieldN41" },
    { ID: "15", Name: "Name5", Field1: "FieldA51", Field2: "FieldB51", Field3: "FieldC51", Field4: "FieldD51", Field5: "FieldE51", Field6: "FieldF51", Field7: "FieldG51", Field8: "FieldH51", Field9: "FieldI51", Field10: "FieldJ51", Field11: "FieldK51", Field12: "FieldL51", Field13: "FieldM51", Field14: "FieldN51" },
    { ID: "16", Name: "Name6", Field1: "FieldA61", Field2: "FieldB61", Field3: "FieldC61", Field4: "FieldD61", Field5: "FieldE61", Field6: "FieldF61", Field7: "FieldG61", Field8: "FieldH61", Field9: "FieldI61", Field10: "FieldJ61", Field11: "FieldK61", Field12: "FieldL61", Field13: "FieldM61", Field14: "FieldN61" },
    { ID: "17", Name: "Name7", Field1: "FieldA71", Field2: "FieldB71", Field3: "FieldC71", Field4: "FieldD71", Field5: "FieldE71", Field6: "FieldF71", Field7: "FieldG71", Field8: "FieldH71", Field9: "FieldI71", Field10: "FieldJ71", Field11: "FieldK71", Field12: "FieldL71", Field13: "FieldM71", Field14: "FieldN71" },
    { ID: "18", Name: "Name8", Field1: "FieldA81", Field2: "FieldB81", Field3: "FieldC81", Field4: "FieldD81", Field5: "FieldE81", Field6: "FieldF81", Field7: "FieldG81", Field8: "FieldH81", Field9: "FieldI81", Field10: "FieldJ81", Field11: "FieldK81", Field12: "FieldL81", Field13: "FieldM81", Field14: "FieldN81" }
    ]
    }
});

$("#dg2").Grid({ CanShowPager: true, CanShowCheckBox: true, CanShowRowNumber: true, CanMultiple: false, CanShowLoading: true,
    Url: "../datas/grid.json",Method:"GET",
    FrozenColumns: [
    { Title: "ID", Field: "ID", Width: 50 },
    { Title: "名称", Field: "Name", Width: 50 }
    ],
    Columns: [
    { Title: "字段1", Field: "Field1", Width: 60 },
    { Title: "字段2", Field: "Field2", Width: 70 },
    { Title: "字段3", Field: "Field3", Width: 80 },
    { Title: "字段4", Field: "Field4", Width: 90 },
    { Title: "字段5", Field: "Field5", Width: 90 },
    { Title: "字段6", Field: "Field6", Width: 90 },
    { Title: "字段7", Field: "Field7", Width: 90 },
    { Title: "字段8", Field: "Field8", Width: 90 },
    { Title: "字段9", Field: "Field9", Width: 90 },
    { Title: "字段10", Field: "Field10", Width: 90 },
    { Title: "字段11", Field: "Field11", Width: 90 },
    { Title: "字段12", Field: "Field12", Width: 90 },
    { Title: "字段13", Field: "Field13", Width: 90 },
    { Title: "字段14", Field: "Field14", Width: 90 }
    ],
    PageButtons: [
    { Icon: "icon-trash", Title: "Trash", Color: "blue",
        Click: function (title) {
            $("#dg2").Frame().Clear();
        }
    },
    { Separator: true },
    { Icon: "icon-pencil", Title: "Pencil", Color: "purple",
        Click: function (title) {
            $("#dg2").Frame().Load("../datas/grid.json");
        }
    }
    ]
});</pre>
                </div>
                <div title="示例">
                    <div class="space"></div>
                    <div style="height:300px;">
                        <div id="dg1"></div>
                    </div>
                    <div class="space"></div>
                    <div style="height:300px;">
                        <div id="dg2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
